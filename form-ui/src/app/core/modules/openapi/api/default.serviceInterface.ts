/**
 * Open Api Specification
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { Form1Dto } from '../model/models';
import { Form2Dto } from '../model/models';
import { Form3Dto } from '../model/models';
import { ItemDto } from '../model/models';
import { ItemOverviewDto } from '../model/models';
import { RequestDto } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface DefaultServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Create a sub-request under a request
     * 
     * @param requestId 
     * @param requestDto 
     */
    createSubRequest(requestId: string, requestDto: RequestDto, extraHttpRequestParams?: any): Observable<RequestDto>;

    /**
     * Delete a request
     * 
     * @param requestId 
     */
    deleteRequest(requestId: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Retrieve a single item by its ID
     * 
     * @param itemId 
     */
    findItemById(itemId: string, extraHttpRequestParams?: any): Observable<ItemDto>;

    /**
     * Retrieve a list of items
     * 
     */
    findItems(extraHttpRequestParams?: any): Observable<Array<ItemOverviewDto>>;

    /**
     * Retrieve Form1 for a specific request
     * 
     * @param requestId 
     */
    getForm1(requestId: string, extraHttpRequestParams?: any): Observable<Form1Dto>;

    /**
     * Retrieve Form2 for a specific request
     * 
     * @param requestId 
     */
    getForm2(requestId: string, extraHttpRequestParams?: any): Observable<Form2Dto>;

    /**
     * Retrieve Form3 for a specific request
     * 
     * @param requestId 
     */
    getForm3(requestId: string, extraHttpRequestParams?: any): Observable<Form3Dto>;

    /**
     * Retrieve a request by its ID
     * 
     * @param requestId 
     */
    getRequestById(requestId: string, extraHttpRequestParams?: any): Observable<RequestDto>;

    /**
     * List all requests
     * 
     */
    listRequests(extraHttpRequestParams?: any): Observable<Array<RequestDto>>;

    /**
     * Update Form1 details
     * 
     * @param requestId 
     * @param form1Dto 
     */
    updateForm1(requestId: string, form1Dto: Form1Dto, extraHttpRequestParams?: any): Observable<Form1Dto>;

    /**
     * Update Form2 details
     * 
     * @param requestId 
     * @param form2Dto 
     */
    updateForm2(requestId: string, form2Dto: Form2Dto, extraHttpRequestParams?: any): Observable<Form2Dto>;

    /**
     * Update Form3 details
     * 
     * @param requestId 
     * @param form3Dto 
     */
    updateForm3(requestId: string, form3Dto: Form3Dto, extraHttpRequestParams?: any): Observable<Form3Dto>;

    /**
     * Update a request partially
     * 
     * @param requestId 
     * @param requestDto 
     */
    updateRequest(requestId: string, requestDto: RequestDto, extraHttpRequestParams?: any): Observable<RequestDto>;

}

openapi: 3.0.1
info:
  title: Open Api Specification
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Real estate Service
paths:
  /real-estate:
    get:
      operationId: findRealEstate
      summary: Retrieve a list of real estate
      description: Retrieve a list of real estate
      responses:
        '200':
          description: A list of real estate
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./schemas/RealEstateOverviewDto.yml
  /real-estate/{realEstateId}:
    get:
      operationId: findRealEstateById
      summary: Retrieve a single real estate item by its ID
      description: Retrieve a single real estate item by its ID
      parameters:
        - name: realEstateId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Details of the real estate item
          content:
            application/json:
              schema:
                $ref: ./schemas/RealEstateDto.yml
        '404':
          description: Real estate not found

  /requests:
    get:
      operationId: listRequests
      summary: List all requests
      description: List all requests
      responses:
        '200':
          description: A list of requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./schemas/RequestOverviewDto.yml
  /requests/{requestId}:
    get:
      operationId: getRequestById
      summary: Retrieve a request by its ID
      description: Retrieve a request by its ID
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request details
          content:
            application/json:
              schema:
                $ref: ./schemas/RequestDto.yml
        '404':
          description: Request not found
    delete:
      operationId: deleteRequest
      summary: Delete a request
      description: Delete a request
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Request deleted
    patch:
      operationId: updateRequest
      summary: Update a request partially
      description: Update a request partially
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ./schemas/RequestDto.yml
      responses:
        '200':
          description: Updated request
          content:
            application/json:
              schema:
                $ref: ./schemas/RequestDto.yml
    post:
      operationId: createSubRequest
      summary: Create a sub-request under a request
      description: Create a sub-request under a request
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ./schemas/RequestDto.yml
      responses:
        '201':
          description: Sub-request created
          content:
            application/json:
              schema:
                $ref: ./schemas/RequestDto.yml
  /requests/{requestId}/persona-form:
    get:
      operationId: getPersonaForm
      summary: Retrieve persona form for a specific request
      description: Retrieve persona form for a specific request
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: persona details
          content:
            application/json:
              schema:
                $ref: ./schemas/request-form/PersonaFormDto.yml
    patch:
      operationId: updatePersonaForm
      summary: Update PersonaForm details
      description: Update PersonaForm details
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ./schemas/request-form/PersonaFormDto.yml
      responses:
        '200':
          description: Updated PersonaForm
          content:
            application/json:
              schema:
                $ref: ./schemas/request-form/PersonaFormDto.yml

  /requests/{requestId}/form2:
    get:
      operationId: getFinancialForm
      summary: Retrieve FinancialForm for a specific request
      description: Retrieve FinancialForm for a specific request
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: FinancialForm details
          content:
            application/json:
              schema:
                $ref: ./schemas/request-form/FinancialFormDto.yml
    patch:
      operationId: updateFinancialForm
      summary: Update FinancialForm details
      description: Update FinancialForm details
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ./schemas/request-form/FinancialFormDto.yml
      responses:
        '200':
          description: Updated FinancialForm
          content:
            application/json:
              schema:
                $ref: ./schemas/request-form/FinancialFormDto.yml
  /requests/{requestId}/QuestionForm:
    get:
      operationId: getQuestionForm
      summary: Retrieve QuestionForm for a specific request
      description: Retrieve QuestionForm for a specific request
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: QuestionForm details
          content:
            application/json:
              schema:
                $ref: ./schemas/request-form/QuestionFormDto.yml
    patch:
      operationId: updateQuestionForm
      summary: Update QuestionForm details
      description: Update QuestionForm details
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ./schemas/request-form/QuestionFormDto.yml
      responses:
        '200':
          description: Updated QuestionForm
          content:
            application/json:
              schema:
                $ref: ./schemas/request-form/QuestionFormDto.yml
